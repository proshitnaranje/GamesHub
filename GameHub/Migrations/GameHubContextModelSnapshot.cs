// <auto-generated />
using System;
using GameHub.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameHub.WebApi.Migrations
{
    [DbContext(typeof(GameHubContext))]
    partial class GameHubContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("GameHub.Entities.Game", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<double?>("Price")
                        .HasColumnType("REAL");

                    b.Property<DateTimeOffset?>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Open world action role-playing video game.",
                            Genre = "Role-playing",
                            Price = 39.990000000000002,
                            ReleaseDate = new DateTimeOffset(new DateTime(2011, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 30, 0, 0)),
                            StockQuantity = 120,
                            Title = "The Elder Scrolls V: Skyrim"
                        },
                        new
                        {
                            ID = 2,
                            Description = "Action role-playing game set in a lush, open world.",
                            Genre = "Action",
                            Price = 49.990000000000002,
                            ReleaseDate = new DateTimeOffset(new DateTime(2015, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 30, 0, 0)),
                            StockQuantity = 150,
                            Title = "The Witcher 3: Wild Hunt"
                        },
                        new
                        {
                            ID = 3,
                            Description = "Open-world, action-adventure story set in Night City.",
                            Genre = "Action",
                            Price = 59.990000000000002,
                            ReleaseDate = new DateTimeOffset(new DateTime(2020, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 30, 0, 0)),
                            StockQuantity = 80,
                            Title = "Cyberpunk 2077"
                        },
                        new
                        {
                            ID = 4,
                            Description = "Sandbox game that allows players to build with a variety of different blocks in a 3D procedurally generated world.",
                            Genre = "Sandbox",
                            Price = 26.949999999999999,
                            ReleaseDate = new DateTimeOffset(new DateTime(2011, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 30, 0, 0)),
                            StockQuantity = 0,
                            Title = "Minecraft"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
